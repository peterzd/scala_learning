 * 当同时用类型和值参数化实例时，就先写[]和类型参数，再写()和值参数
 * 若方法只有一个参数，调用的时候就可以省略点及括号
 * 任何对于对象的值参数应用都将被转换为对apply方法的调用。可以解释数组也是用()传值，而不是像Java一样的[]
 * 方法没有副作用是函数式风格编程的重要概念，计算并返回值应该是方法唯一的目的。
 * Scala里以冒号结尾的操作符，是右操作符
 * Scala里的List不支持append操作，如果想把元素加到最后，可以使用ListBuffer操作。完成后再调用toList。
 
 $使用元组(tuple)：
 * 元组可以包含不同类型的元素
 * 对元组的访问：用点号、下划线和基于1的索引访问其中元素
 
 $ Set和Map
 * 注意， Map的定义是 1 -> "Hello"
 
 $ 学习识别函数式风格
 * 如果没有使用var 或者都是用val来声明的，则有可能是函数风格的
 * 识别函数是否有副作用的地方就在于结果类型是否为Unit